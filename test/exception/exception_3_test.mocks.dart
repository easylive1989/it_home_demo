// Mocks generated by Mockito 5.4.2 from annotations
// in it_home_demo/test/exception/exception_3_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;

import 'exception_3_test.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeProductRepository_0 extends _i1.SmartFake
    implements _i2.ProductRepository {
  _FakeProductRepository_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWalletRepository_1 extends _i1.SmartFake
    implements _i2.WalletRepository {
  _FakeWalletRepository_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [PurchaseProductService].
///
/// See the documentation for Mockito's code generation for more information.
class MockPurchaseProductService extends _i1.Mock
    implements _i2.PurchaseProductService {
  @override
  _i2.ProductRepository get productRepository => (super.noSuchMethod(
        Invocation.getter(#productRepository),
        returnValue: _FakeProductRepository_0(
          this,
          Invocation.getter(#productRepository),
        ),
        returnValueForMissingStub: _FakeProductRepository_0(
          this,
          Invocation.getter(#productRepository),
        ),
      ) as _i2.ProductRepository);
  @override
  _i2.WalletRepository get walletRepository => (super.noSuchMethod(
        Invocation.getter(#walletRepository),
        returnValue: _FakeWalletRepository_1(
          this,
          Invocation.getter(#walletRepository),
        ),
        returnValueForMissingStub: _FakeWalletRepository_1(
          this,
          Invocation.getter(#walletRepository),
        ),
      ) as _i2.WalletRepository);
  @override
  _i3.Future<void> execute(_i2.Product? product) => (super.noSuchMethod(
        Invocation.method(
          #execute,
          [product],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}
